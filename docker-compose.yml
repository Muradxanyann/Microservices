services:
  # ----------------------------------------------------
  # ðŸ†• 1. REDIS CACHE SERVICE
  # ----------------------------------------------------
  redis-cache:
    image: redis:7-alpine
    container_name: redis-cache
    restart: always
    volumes:
      - redis-data:/data 
    networks:
      - microservices-net
  

  api-gateway:
    container_name: api-gateway
    build:
      context: ./ApiGateway
      dockerfile: Dockerfile
    ports:
      - "8000:8080"
    environment:
      - ASPNETCORE_URLS=http://+:8080
    depends_on:
      - shop-api
      - shop-auth-service
    networks:
      - microservices-net

  shop-api:
    container_name: shop-api
    build:
      context: ./ShopApi
      dockerfile: Presentation/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=host.docker.internal;Database=Shop;Username=postgres;Password=1111
      - "ConnectionStrings:Redis=redis-cache:6379"
    depends_on:
      - shop-db
      - redis-cache 
    networks:
      - microservices-net

  shop-auth-service:
    container_name: shop-auth-service
    build:
      context: ./ShopApiAuthService
      dockerfile: Presentation/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://+:8080
      - "ConnectionStrings:Redis=redis-cache:6379" 
      - ConnectionStrings__DefaultConnection=Host=host.docker.internal;Database=ShopAuthService;Username=postgres;Password=1111
    depends_on:
      - redis-cache
      - shop-auth-db
    networks:
      - microservices-net

  shop-db:
    image: postgres:16-alpine
    container_name: shop-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1111
      - POSTGRES_DB=Shop
    volumes:
      - shop-db-data:/var/lib/postgresql/data
    networks:
      - microservices-net

  shop-auth-db:
    image: postgres:16-alpine
    container_name: shop-auth-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1111
      - POSTGRES_DB=ShopAuthService
    volumes:
      - shop-auth-db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - microservices-net

networks:
  microservices-net:
    driver: bridge

volumes:
  shop-db-data:
  shop-auth-db-data:
  redis-data: {}

