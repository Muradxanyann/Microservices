# Указываем версию синтаксиса Docker Compose. 3.8 - стабильная и современная.
version: '3.8'

# Секция, где мы определяем все наши сервисы (контейнеры).
services:
  # 1. Сервис для ShopApi
  shop-api:
    container_name: shop-api
    build:
      context: ./ShopApi # Указываем, где находятся исходники для сборки (корневая папка сервиса).
      dockerfile: Presentation/Dockerfile # Указываем путь к Dockerfile относительно context.
    ports:
      # ИЗМЕНЕНИЕ: Запросы с порта 5000 твоего компьютера (хоста)
      # теперь правильно перенаправляются на порт 8080 внутри контейнера.
      - "5000:8080"
    environment:
      # ДОБАВЛЕНО: Явно указываем серверу Kestrel слушать именно порт 8080 внутри контейнера.
      # Это лучшая практика для избежания путаницы с портами.
      - ASPNETCORE_URLS=http://+:8080
      # Переопределяем строку подключения, чтобы использовать имя сервиса базы данных.
      - ConnectionStrings__DefaultConnection=Host=host.docker.internal;Database=Shop;Username=postgres;Password=1111
    depends_on:
      - shop-db # Указываем, что этот сервис зависит от 'shop-db'.

  # 2. Сервис для ShopApiAuthService
  shop-auth-service:
    container_name: shop-auth-service
    build:
      context: ./ShopApiAuthService
      dockerfile: Presentation/Dockerfile
    ports:
      # ИЗМЕНЕНИЕ: Запросы с порта 5001 твоего компьютера
      # перенаправляются на порт 8080 внутри этого контейнера.
      - "5001:8080"
    environment:
      # ДОБАВЛЕНО: Этот сервис тоже должен слушать порт 8080 внутри своего контейнера.
      - ASPNETCORE_URLS=http://+:8080
      # Аналогично первому сервису, указываем имя его контейнера с базой данных.
      - ConnectionStrings__DefaultConnection=Host=host.docker.internal;Database=ShopAuthService;Username=postgres;Password=1111
    depends_on:
      shop-auth-db:
        condition: service_healthy

  # 3. Сервис базы данных для ShopApi
  shop-db:
    image: postgres:16-alpine
    container_name: shop-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1111
      - POSTGRES_DB=Shop
    volumes:
      - shop-db-data:/var/lib/postgresql/data

  # 4. Сервис базы данных для ShopApiAuthService
  shop-auth-db:
    image: postgres:16-alpine
    container_name: shop-auth-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1111
      - POSTGRES_DB=ShopAuthService
    volumes:
      - shop-auth-db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 3s
      retries: 5

# Секция для определения именованных томов (volumes) для сохранения данных.
volumes:
  shop-db-data:
  shop-auth-db-data:

